<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.crm.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.crm.domain.Customer">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="age" property="age" />
    <result column="gender" property="gender" />
    <result column="tel" property="tel" />
    <result column="qq" property="qq" />
    <result column="inputTime" property="inputTime" />
    <result column="status" property="status" />
    <result column="positiveTime" property="positiveTime" />

    <association property="job" javaType="SystemDictionaryItem" column="job_id"
                 select="cn.wolfcode.crm.mapper.SystemDictionaryItemMapper.selectByPrimaryKey">
    </association>

    <association property="source" javaType="SystemDictionaryItem" column="source_id"
                 select="cn.wolfcode.crm.mapper.SystemDictionaryItemMapper.selectByPrimaryKey">
    </association>
    <association property="inputUser" javaType="Employee" column="inputUser_id"
                 select="cn.wolfcode.crm.mapper.EmployeeMapper.selectByPrimaryKey">
    </association>

    <association property="seller" javaType="Employee" columnPrefix="e_" >
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>

  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from customer
    where id = #{id}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into customer (name, age, gender, tel, qq, job_id, source_id, seller_id, 
      inputUser_id, inputTime, status, positiveTime)
    values (#{name}, #{age}, #{gender}, #{tel}, #{qq}, #{job.id}, #{source.id}, #{seller.id},
      #{inputUser.id}, #{inputTime}, #{status}, #{positiveTime})
  </insert>
  <update id="updateByPrimaryKey">
    update customer
    set name = #{name},
      age = #{age},
      gender = #{gender},
      tel = #{tel},
      qq = #{qq},
      job_id = #{job.id},
      source_id = #{source.id},
      seller_id = #{seller.id},
      status = #{status},
      positiveTime = #{positiveTime}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, name, age, gender, tel, qq, job_id, source_id, seller_id, inputUser_id, 
    inputTime, status, positiveTime
    from customer
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, age, gender, tel, qq, job_id, source_id, seller_id, inputUser_id, 
    inputTime, status, positiveTime
    from customer
  </select>

  <select id="selectForList" resultMap="BaseResultMap">
    select c.id, c.name, c.age, c.gender, c.tel, c.qq, c.job_id, c.source_id, c.seller_id, c.inputUser_id,
    c.inputTime, c.status, c.positiveTime, e.id e_id, e.name e_name
    from customer c LEFT JOIN employee e on c.seller_id = e.id

    <where>
      <if test="keyword != null">
        and (c.name like concat('%',#{keyword},'%') or c.tel like concat('%',#{keyword},'%'))
      </if>

      <if test="status >= 0">
        and c.status = #{status}
      </if>

      <if test="sellerId > 0">
        and c.seller_id = #{sellerId}
      </if>
    </where>

  </select>

  <!--修改客户状态-->
  <update id="updateStatus">
    update customer set status = #{status} where id = #{cid}
  </update>

</mapper>